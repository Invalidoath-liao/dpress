<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="posts" >
	<select id="qbyslug" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time as createTime, siteid , update_time , disallow_comment as disallowComment, edit_time , editor_type , format_content as formatContent  , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail , title , top_priority, url , visits
		from posts
		where type=0 and slug=#{slug} and siteid=#{siteid}
	</select>
	<update id="uvisit" parameterType="java.util.HashMap">
		update posts set visits=visits+1 where id=#{postid}  and siteid=#{siteid}
	</update>
	<select id="qprevPost" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
		<![CDATA[
		select  slug  ,title from posts where siteid=#{siteid}  and type=0 and status=0 and id < #{postid}  order by id desc limit 1
		]]>
	</select>
	<select id="qnextPost" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
		select  slug,  title from posts where siteid=#{siteid} and type=0 and status=0 and id>#{postid}  limit 1
	</select>
	<select id="qpostslimit" resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select id , create_time  as createTime  , siteid , update_time , disallow_comment  as disallowComment, edit_time , editor_type , format_content , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail, title ,
			 top_priority , url , visits from posts
			   force index(posts_index)

		where type=0 and status=#{status} and siteid=#{siteid}
		<if test="startid != null">

		<![CDATA[
			and id<=#{startid} and id>#{startid}-2000
			  ]]>
		</if>
			order by top_priority desc , create_time desc limit  #{size}
	</select>
	<select id="qpostscount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select count(id) as ct from posts  where type=0 and status=#{status} and siteid=#{siteid} and id >=0
	</select>
	<select id="qsheet" resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select id , create_time as createTime, siteid , update_time , disallow_comment , edit_time , editor_type , format_content as formatContent  , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail , title , top_priority, url , visits
		from posts
		where type=1 and slug=#{slug} and siteid=#{siteid}
	</select>

	<select id="qall" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time as createTime, siteid , update_time , disallow_comment , edit_time , editor_type , format_content as formatContent  , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail , title , top_priority, url , visits
		from posts
		where type=0  and siteid=#{siteid}
	</select>
	<insert id="i" parameterType="java.util.HashMap">
 		insert into posts (
type,create_time,update_time,edit_time,editor_type,format_content,likes
,meta_description,meta_keywords,original_content,password,slug,
status,summary,template,thumbnail,title,top_priority,url,visits,siteid,disallow_comment
 		) values(
#{type},#{create_time},#{update_time},#{edit_time},#{editor_type},#{format_content},#{likes},#{meta_description},#{meta_keywords},#{original_content},#{password},#{slug}
,#{status},#{summary},#{template},#{thumbnail},#{title},#{top_priority},#{url},#{visits},#{siteid},#{disallow_comment}
 		)
	</insert>
	<select id="q" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time as updateTime , disallow_comment , edit_time , editor_type as editorType , format_content , likes , meta_description as metaDescription , meta_keywords  as metaKeywords , original_content , password , slug , status , summary , template , thumbnail, title ,
			 top_priority , url , visits from posts where id=#{id} and siteid=#{siteid}
	</select>
	<select id="qadminposts"  resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select id , create_time  as createTime  , siteid , update_time , disallow_comment , edit_time , editor_type , format_content , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail, title ,
			 top_priority , url , visits from posts a


where type=0 and siteid=#{siteid}
		<if test="status != null">

and status=#{status}
		</if>
		<if test="categoryId != null">

		and (exists (select post_id from post_categories  where a.id=post_id and category_id=#{categoryId}))
		</if>
		<if test="keyword1 != null">

		and (title like #{keyword} or original_content like #{keyword})
		</if>

 order by   top_priority desc ,create_time desc limit #{start},#{size}

	</select>
	<update id="u" parameterType="java.util.HashMap">
		update posts set  update_time=#{update_time}, disallow_comment=#{disallow_comment}, edit_time=#{edit_time},
		 editor_type=#{editor_type}, format_content=#{format_content}, likes=#{likes}, meta_description=#{meta_description},
		 meta_keywords=#{meta_keywords},
		 original_content=#{original_content}, password=#{password}, slug=#{slug}, status=#{status}, summary=#{summary},
		 template=#{template}, thumbnail=#{thumbnail}, title=#{title}, top_priority=#{top_priority}, url=#{url}
		where id=#{id} and siteid=#{siteid}
	</update>
	<update id="u2" parameterType="java.util.HashMap">
		update posts set  update_time=#{update_time}, disallow_comment=#{disallow_comment}, edit_time=#{edit_time},
		 editor_type=#{editor_type}, format_content=#{format_content}, likes=#{likes}, meta_description=#{meta_description},
		 meta_keywords=#{meta_keywords},create_time=#{create_time},
		 original_content=#{original_content}, password=#{password}, slug=#{slug}, status=#{status}, summary=#{summary},
		 template=#{template}, thumbnail=#{thumbnail}, title=#{title}, top_priority=#{top_priority}, url=#{url}
		where id=#{id} and siteid=#{siteid}
	</update>
	<select id="qadmincountposts"  resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select  count(1) as ct from posts a

where type=0 and siteid=#{siteid}
		<if test="status != null">

			and status=#{status}
		</if>
		<if test="categoryId != null">

			and (exists (select post_id from post_categories  where a.id=post_id and category_id=#{categoryId}))
		</if>
		<if test="keyword1 != null">

			and (title like #{keyword} or original_content like #{keyword})
		</if>

	</select>
	<update id="ustatusbyid" parameterType="java.util.HashMap">

		update posts set status=#{status} where id=#{id} and siteid=#{siteid}
	</update>
	<delete id="d" parameterType="java.util.HashMap">
delete from posts where id=#{id} and siteid=#{siteid}
	</delete>
	<select id="qcount" resultType="java.lang.Long" parameterType="java.util.HashMap">
			select count(id) as ct from posts  where type=0  and siteid=#{siteid}
	</select>
	<select id="qsumvisit" resultType="java.lang.Long" parameterType="java.util.HashMap">
			select sum(visits) as ct from posts  where type=#{type}  and siteid=#{siteid}
	</select>
	<select id="qsumlikes" resultType="java.lang.Long" parameterType="java.util.HashMap">
			select sum(likes) as ct from posts  where type=#{type}  and siteid=#{siteid}
	</select>
	<select id="qsheetlimit"  resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time  as updateTime , disallow_comment as disallowComment , edit_time as editTime , editor_type as editorType  , format_content , likes , meta_description as metaDescription , meta_keywords  as metaKeywords, original_content , password , slug , status , summary , template , thumbnail, title ,
		top_priority  as topPriority, url , visits from posts a


		where type=1 and siteid=#{siteid}
		<if test="status != null">

			and status=#{status}
		</if>
		<if test="categoryId != null">

			and (exists (select post_id from post_categories  where a.id=post_id and category_id=#{categoryId}))
		</if>
		<if test="keyword1 != null">

			and (title like #{keyword} or original_content like #{keyword})
		</if>

		order by top_priority desc, create_time desc limit #{start},#{size}

	</select>
	<select id="qsheetlimitcount"  resultType="java.lang.Long" parameterType="java.util.HashMap">
		select count(id) from posts a


		where type=1 and siteid=#{siteid}
		<if test="status != null">

			and status=#{status}
		</if>
		<if test="categoryId != null">

			and (exists (select post_id from post_categories  where a.id=post_id and category_id=#{categoryId}))
		</if>
		<if test="keyword1 != null">

			and (title like #{keyword} or original_content like #{keyword})
		</if>

		order by top_priority desc, create_time desc limit #{start},#{size}

	</select>

	<select id="qcountbynormal" resultType="java.lang.Long" parameterType="java.util.HashMap">
			select count(id) as ct from posts  where type=0  and siteid=#{siteid} and status=#{status}
	</select>
	<select id="qlimitbynormal" resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select create_time,slug,title from posts  where type=0  and siteid=#{siteid} and status=#{status}
			 order by create_time asc  limit #{start},100
	</select>
	<select id="qmaxid" resultType="java.lang.Long" parameterType="java.util.HashMap">
		select max(id) from posts  where type=0  and siteid=#{siteid} and status=#{status} and type='0'
	</select>
	<select id="qminid" resultType="java.lang.Long" parameterType="java.util.HashMap">
		select min(id) from posts  where type=0  and siteid=#{siteid} and status=#{status}  and type='0'
	</select>
	<select id="qbetweenids" resultType="java.util.HashMap" parameterType="java.util.HashMap">
				<![CDATA[
	select create_time,slug,title from posts  where type=0  and siteid=#{siteid} and status=#{status}
		and id >=#{min} and id<#{max}

	]]>

	</select>
	<select id="qprevPost1" resultType="java.lang.Long"  parameterType="java.util.HashMap">
		<![CDATA[
		select  id from posts where siteid=#{siteid} and id >#{id}  and type=#{type} and status=#{status} order by id asc limit #{offset}
		]]>
	</select>


	<select id="qsearchpostslimit" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time , disallow_comment  as disallowComment, edit_time , editor_type , format_content , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail, title ,
		top_priority , url , visits from posts
		where type=0 and status=#{status} and siteid=#{siteid}
		and (title like #{keyword} or original_content like #{keyword})

		order by  create_time desc, id desc limit #{start}, #{size}
	</select>
	<select id="qsearchcountbynormal" resultType="java.lang.Long" parameterType="java.util.HashMap">
			select count(id) as ct from posts  where type=0  and siteid=#{siteid} and status=#{status} and id >=0
			and (title like #{keyword} or original_content like #{keyword})
	</select>
	<select id="qsearchmaxid" resultType="java.lang.Long" parameterType="java.util.HashMap">
		select max(id) from posts  where type=0  and siteid=#{siteid} and status=#{status}
		and (title like #{keyword} or original_content like #{keyword})
	</select>
	<select id="qsearchprevPost1" resultType="java.lang.Long"  parameterType="java.util.HashMap">
		<![CDATA[
		select  id from posts where siteid=#{siteid} and id >#{id}  and type=#{type} and status=#{status}
		and (title like #{keyword} or original_content like #{keyword})
		order by id asc limit #{offset}
		]]>
	</select>
	<select id="qorderbycreate_time" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time as updateTime , disallow_comment , edit_time , editor_type as editorType , format_content , likes , meta_description as metaDescription , meta_keywords  as metaKeywords , original_content , password , slug , status , summary , template , thumbnail, title ,
			 top_priority , url , visits from posts where siteid=#{siteid} and status=#{status} and type=#{type} order by create_time desc
		<if test="step != null">
			limit #{step}
		</if>
	</select>
	<select id="qpostslimit2" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time , disallow_comment  as disallowComment, edit_time , editor_type , format_content , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail, title ,
		top_priority , url , visits from posts
		where type=0 and status=#{status} and siteid=#{siteid}
		<if test="startid != null">

			<![CDATA[
			and id<=#{startid}
			  ]]>
		</if>
		  limit  #{size}
	</select>

	<select id="qbaidunull" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select id , create_time  as createTime  , siteid , update_time , disallow_comment  as disallowComment, edit_time , editor_type , format_content , likes , meta_description , meta_keywords , original_content , password , slug , status , summary , template , thumbnail, title ,
		top_priority , url , visits from posts
		where type=0 and status=#{status} and siteid=#{siteid}
		 and baidudate is null
		limit  #{size}
	</select>
	<select id="qbaiducount"  resultType="java.lang.Long" parameterType="java.util.HashMap">
		select count(1) from posts where siteid=#{siteid} and baidudate =#{date}
	</select>
	<update id="ubaidudate" parameterType="java.util.HashMap">
		update posts set baidudate=#{date} where id=#{id}
	</update>
</mapper>